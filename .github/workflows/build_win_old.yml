name: Add-On Build AC22-24
on:
  push

defaults:
  run:
    shell: bash

jobs:
  build_win_old:
    strategy:
      fail-fast: true
      matrix:
        ac-version: [22, 23, 24]
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4

      - name: Checkout the submodule
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1
      - name: Install older build components
        run: |
          # For versions update see here: https://learn.microsoft.com/en-us/visualstudio/install/workload-component-id-vs-build-tools?view=vs-2022
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $componentsToInstall= @(
          "Microsoft.VisualStudio.Component.VC.140"
          "Microsoft.VisualStudio.Component.VC.v141.x86.x64"
          "Microsoft.VisualStudio.Component.VC.14.39.17.9.x86.x64"
          "Microsoft.VisualStudio.Component.VC.14.39.17.9.ATL"
          )
          [string]$workloadArgs = $componentsToInstall | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
          # should be run twice
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
        shell: powershell

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: 3.8
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install requests
      
      - name: Run build script
        run: |
          python Tools/BuildAddOn.py --configFile config.json --acVersion ${{ matrix.ac-version }} --release  --package
      - name: Get Time
        id: time
        uses: nanzm/get-time-action@master
        with:
          format: 'YYYY-MM-DD-HH'
      - name: Upload Artifact
        env:
          TIME: "${{ steps.time.outputs.time }}"
        uses: actions/upload-artifact@v4
        with:
          name: SomeStuff AC${{ matrix.ac-version }} Win ${{ env.TIME }}
          path: Build/Package/SomeStuff/${{ matrix.ac-version }}
